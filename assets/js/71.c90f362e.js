(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{484:function(t,e,s){"use strict";s.r(e);var n=s(33),a=Object(n.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"第一部分-fpm-配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第一部分-fpm-配置"}},[t._v("#")]),t._v(" 第一部分：FPM 配置")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("参数")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("-p")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("命令行中动态修改--prefix")])]),t._v(" "),s("tr",[s("td",[t._v(";include=etc/fpm.d/*.conf")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("用于包含一个或多个文件，如果glob(3)存在(glob()函数返回匹配指定模式的文件名或目录)")])])])]),t._v(" "),s("h2",{attrs:{id:"第二部分-全局配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第二部分-全局配置"}},[t._v("#")]),t._v(" 第二部分：全局配置")]),t._v(" "),s("p",[t._v("由标志["),s("strong",[t._v("global")]),t._v("]开始：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(";pid = run/php-fpm.pid　　　　　 设置pid文件的位置，默认目录路径 /usr/local/php/var\n;error_log = log/php-fpm.log　　记录错误日志的文件，默认目录路径 /usr/local/php/var\n;syslog.facility = daemon　　　　用于指定什么类型的程序日志消息。\n;syslog.ident = php-fpm　　　　  用于FPM多实例甄别\n;log_level = notice　　　　　　　 记录日志的等级，默认notice，可取值alert, error, warning, notice, debug\n;emergency_restart_threshold = 0 如果子进程在这个时间段内带有IGSEGV或SIGBUS退出，则重启fpm，默认0表示关闭这个功能\n;emergency_restart_interval = 0　设置时间间隔来决定服务的初始化时间（默认单位：s秒），可选s秒，m分，h时，d天\n;process_control_timeout = 0　　  子进程等待master进程对信号的回应（默认单位：s秒），可选s秒，m分，h时，d天\n; process.max = 128　　　　　　　　 控制最大进程数，使用时需谨慎\n; process.priority = -19　　　　　 处理nice(2)的进程优先级别-19(最高)到20(最低)\n;rlimit_files = 1024　　　　　　　　设置主进程文件描述符rlimit的数量\n;rlimit_core = 0　　　　　　　　　　 设置主进程rlimit最大核数\n;events.mechanism = epoll　　　　　使用处理event事件的机制\n　　; - select     (any POSIX os)\n　　; - poll       (any POSIX os)\n　　; - epoll      (linux >= 2.5.44)\n　　; - kqueue     (FreeBSD >= 4.1, OpenBSD >= 2.9, NetBSD >= 2.0)\n　　; - /dev/poll  (Solaris >= 7)\n　　; - port       (Solaris >= 10)\n;daemonize = yes　　　　　　　　　　 将fpm转至后台运行，如果设置为“no”，那么fpm会运行在前台\n;systemd_interval = 10\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br")])]),s("h2",{attrs:{id:"第三部分-进程池的定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第三部分-进程池的定义"}},[t._v("#")]),t._v(" 第三部分：进程池的定义")]),t._v(" "),s("p",[s("strong",[t._v("通过监听不同的端口和不用管理选择可以定义多个不同的子进程池，进程池被用与记录和统计")]),t._v("，对于fpm能够处理进程池数目的多少并没有限制\n其中$pool变量可以在任何指令中使用，他将会替代相应的进程池名字。例如：这里的**[www]**")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@test ～]# ps -ef | grep php-fpm\nroot      3028     1  0 20:33 ?        00:00:00 php-fpm: master process (/usr/local/php/etc/php-fpm.conf)\nnobody    3029  3028  0 20:33 ?        00:00:00 php-fpm: pool www          \nnobody    3030  3028  0 20:33 ?        00:00:00 php-fpm: pool www\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[www]; It only applies on the following directives:\n; - 'access.log'\n; - 'slowlog'\n; - 'listen' (unixsocket)\n; - 'chroot'\n; - 'chdir'\n; - 'php_values'\n; - 'php_admin_values'\n\n;prefix = /path/to/pools/$pool   如果没有制定，将使用全局prefix替代\nuser = nobody　　　　　　　　　　进程的发起用户和用户组，用户user是必须设置，group不是\ngroup = nobody\nlisten = 127.0.0.1:9000　　　　　　 监听ip和端口\n;listen.backlog = 65535　　　　　　 设置listen(2)函数backlog\n;listen.owner = nobody\n;listen.group = nobody\n;listen.mode = 0660\n;listen.acl_users =\n;listen.acl_groups =\n;listen.allowed_clients = 127.0.0.1 允许FastCGI客户端连接的IPv4地址，多个地址用','分隔，为空则允许任何地址发来链接请求\n; process.priority = -19\n\npm = dynamic　\n选择进程池管理器如何控制子进程的数量　　\n\tstatic：　　对于子进程的开启数路给定一个锁定的值(pm.max_children)　　\n\tdynamic:　 子进程的数目为动态的，它的数目基于下面的指令的值(以下为dynamic适用参数)　　　　\n\t\tpm.max_children：  同一时刻能够存货的最大子进程的数量　　　　\n\t\tpm.start_servers： 在启动时启动的子进程数量　　　　\n\t\tpm.min_spare_servers： 处于空闲\"idle\"状态的最小子进程，如果空闲进程数量小于这个值，那么相应的子进程会被创建　　　　\n\t\tpm.max_spare_servers： 最大空闲子进程数量，空闲子进程数量超过这个值，那么相应的子进程会被杀掉。　　\n\tondemand： 在启动时不会创建，只有当发起请求链接时才会创建(pm.max_children, pm.process_idle_timeout)\n\n\npm.max_children = 5\npm.start_servers = 2\npm.min_spare_servers = 1\npm.max_spare_servers = 3\n;pm.process_idle_timeout = 10s;　　空闲进程超时时间\n;pm.max_requests = 500　　　　　　　 在派生新的子进程前，每一个子进程应该处理的请求数目，在第三方库中解决内存溢出很有用，设置为0则不会限制\n;pm.status_path = /status　　　     配置一个URI，以便查看fpm状态页\n\n\n\n状态页描述：　　\n\taccepted conn: 该进程池接受的请求数量　　\n\tpool: 进程池的名字　　\n\tprocess manager: 进程管理，就是配置中pm指令，可以选择值static，dynamic，ondemand　　\n\tidle processes: 空闲进程数量　　\n\tactive processes: 当前活跃的进程数量　　\n\ttotal processes: 总的进程数量=idle+active　　\n\tmax children reached: 达到最大子进程的次数，达到进程的限制，当pm试图开启更多的子进程的时候(仅当pm工作在dynamic时)\n\n;ping.path = /ping　　　　该ping URI将会去调用fpm监控页面，如果这个没有设置，那么不会有URI被做为ping页\n;ping.response = pong　　用于定制平请求的响应，响应的格式text/plain(对200响应代码)\n;access.log = log/$pool.access.log\n;access.format = \"%R - %u %t \\\"%m %r%Q%q\\\" %s %f %{mili}d %{kilo}M %C%%\"　　\n\t; The following syntax is allowed　　\n\t;  %%: the '%' character　　\n\t;  %C: %CPU used by the request　　\n\t;      it can accept the following format:　　\n\t;      - %{user}C for user CPU only　　\n\t;      - %{system}C for system CPU only　　\n\t;      - %{total}C  for user + system CPU (default)　　\n\t;  %d: time taken to serve the request　　\n\t;      it can accept the following format:　　\n\t;      - %{seconds}d (default)　　\n\t;      - %{miliseconds}d　　\n\t;      - %{mili}d　　\n\t;      - %{microseconds}d　　\n\t;      - %{micro}d　　\n\t;  %e: an environment variable (same as $_ENV or $_SERVER)　　\n\t;      it must be associated with embraces to specify the name of the env　　\n\t;      variable. Some exemples:　　\n\t;      - server specifics like: %{REQUEST_METHOD}e or %{SERVER_PROTOCOL}e　　\n\t;      - HTTP headers like: %{HTTP_HOST}e or %{HTTP_USER_AGENT}e　　\n\t;  %f: script filename　　\n\t;  %l: content-length of the request (for POST request only)　　\n\t;  %m: request method　　\n\t;  %M: peak of memory allocated by PHP　　\n\t;      it can accept the following format:　　\n\t;      - %{bytes}M (default)　　\n\t;      - %{kilobytes}M　　\n\t;      - %{kilo}M　　\n\t;      - %{megabytes}M　　\n\t;      - %{mega}M　　\n\t;  %n: pool name　　\n\t;  %o: output header　　\n\t;      it must be associated with embraces to specify the name of the header:　　\n\t;      - %{Content-Type}o　　\n\t;      - %{X-Powered-By}o　　\n\t;      - %{Transfert-Encoding}o　　\n\t;      - ....　　\n\t;  %p: PID of the child that serviced the request　　\n\t;  %P: PID of the parent of the child that serviced the request　　\n\t;  %q: the query string　　\n\t;  %Q: the '?' character if query string exists　　\n\t;  %r: the request URI (without the query string, see %q and %Q)　　\n\t;  %R: remote IP address　　\n\t;  %s: status (response code)　　\n\t;  %t: server time the request was received　　\n\t;      it can accept a strftime(3) format:　　\n\t;      %d/%b/%Y:%H:%M:%S %z (default)　　\n\t;  %T: time the log has been written (the request has finished)　　\n\t;      it can accept a strftime(3) format:　　\n\t;      %d/%b/%Y:%H:%M:%S %z (default)　　\n\t;  %u: remote user\n;slowlog = log/$pool.log.slow　　 用于记录慢请求\n;request_slowlog_timeout = 0　　  慢日志请求超时时间，对一个php程序进行跟踪。\n;request_terminate_timeout = 0　　终止请求超时时间，在worker进程被杀掉之后，提供单个请求的超时间隔。由于某种原因不停止脚本执行时，应该使用该选项，0表示关闭不启用　　(在php.ini中，max_execution_time 一般设置为30，表示每一个脚本的最大执行时间)\n;rlimit_files = 1024　　　　　　　　设置打开文件描述符的限制\n;rlimit_core = 0　　　　　　　　　　 设置内核对资源的使用限制，用于内核转储\n;chroot =　　　　　　　　　　　　　　　设置chroot路径，程序一启动就将其chroot放置到指定的目录下，该指令值必须是一个绝对路径\n;chdir = /var/www　　　　　　　　　　在程序启动时将会改变到指定的位置(这个是相对路径，相对当前路径或chroot后的“/”目录)　　　　\n;catch_workers_output = yes　　　　将worker的标准输出和错误输出重定向到主要的错误日志记录中，如果没有设置，根据FastCGI的指定，将会被重定向到/dev/null上\n;clear_env = no　　　　　　　　　　  清理环境\n;security.limit_extensions = .php .php3 .php4 .php5　　限制FPM执行解析的扩展名\n;env[HOSTNAME] = $HOSTNAME\n;env[PATH] = /usr/local/bin:/usr/bin:/bin\n;env[TMP] = /tmp\n;env[TMPDIR] = /tmp\n;env[TEMP] = /tmp\n\n\n; Additional php.ini defines, specific to this pool of workers. These settings\n; overwrite the values previously defined in the php.ini. The directives are the\n; same as the PHP SAPI:\n;   php_value/php_flag             - you can set classic ini defines which can\n;                                    be overwritten from PHP call 'ini_set'.\n;   php_admin_value/php_admin_flag - these directives won't be overwritten by\n;                                     PHP call 'ini_set'\n; For php_*flag, valid values are on, off, 1, 0, true, false, yes or no.\n\n\n; Defining 'extension' will load the corresponding shared extension from\n; extension_dir. Defining 'disable_functions' or 'disable_classes' will not\n; overwrite previously defined php.ini values, but will append the new value\n; instead.\n\n\n;php_admin_value[sendmail_path] = /usr/sbin/sendmail -t -i -f www@my.domain.com\n;php_flag[display_errors] = off\n;php_admin_value[error_log] = /var/log/fpm-php.www.log\n;php_admin_flag[log_errors] = on\n;php_admin_value[memory_limit] = 32M　　\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br"),s("span",{staticClass:"line-number"},[t._v("37")]),s("br"),s("span",{staticClass:"line-number"},[t._v("38")]),s("br"),s("span",{staticClass:"line-number"},[t._v("39")]),s("br"),s("span",{staticClass:"line-number"},[t._v("40")]),s("br"),s("span",{staticClass:"line-number"},[t._v("41")]),s("br"),s("span",{staticClass:"line-number"},[t._v("42")]),s("br"),s("span",{staticClass:"line-number"},[t._v("43")]),s("br"),s("span",{staticClass:"line-number"},[t._v("44")]),s("br"),s("span",{staticClass:"line-number"},[t._v("45")]),s("br"),s("span",{staticClass:"line-number"},[t._v("46")]),s("br"),s("span",{staticClass:"line-number"},[t._v("47")]),s("br"),s("span",{staticClass:"line-number"},[t._v("48")]),s("br"),s("span",{staticClass:"line-number"},[t._v("49")]),s("br"),s("span",{staticClass:"line-number"},[t._v("50")]),s("br"),s("span",{staticClass:"line-number"},[t._v("51")]),s("br"),s("span",{staticClass:"line-number"},[t._v("52")]),s("br"),s("span",{staticClass:"line-number"},[t._v("53")]),s("br"),s("span",{staticClass:"line-number"},[t._v("54")]),s("br"),s("span",{staticClass:"line-number"},[t._v("55")]),s("br"),s("span",{staticClass:"line-number"},[t._v("56")]),s("br"),s("span",{staticClass:"line-number"},[t._v("57")]),s("br"),s("span",{staticClass:"line-number"},[t._v("58")]),s("br"),s("span",{staticClass:"line-number"},[t._v("59")]),s("br"),s("span",{staticClass:"line-number"},[t._v("60")]),s("br"),s("span",{staticClass:"line-number"},[t._v("61")]),s("br"),s("span",{staticClass:"line-number"},[t._v("62")]),s("br"),s("span",{staticClass:"line-number"},[t._v("63")]),s("br"),s("span",{staticClass:"line-number"},[t._v("64")]),s("br"),s("span",{staticClass:"line-number"},[t._v("65")]),s("br"),s("span",{staticClass:"line-number"},[t._v("66")]),s("br"),s("span",{staticClass:"line-number"},[t._v("67")]),s("br"),s("span",{staticClass:"line-number"},[t._v("68")]),s("br"),s("span",{staticClass:"line-number"},[t._v("69")]),s("br"),s("span",{staticClass:"line-number"},[t._v("70")]),s("br"),s("span",{staticClass:"line-number"},[t._v("71")]),s("br"),s("span",{staticClass:"line-number"},[t._v("72")]),s("br"),s("span",{staticClass:"line-number"},[t._v("73")]),s("br"),s("span",{staticClass:"line-number"},[t._v("74")]),s("br"),s("span",{staticClass:"line-number"},[t._v("75")]),s("br"),s("span",{staticClass:"line-number"},[t._v("76")]),s("br"),s("span",{staticClass:"line-number"},[t._v("77")]),s("br"),s("span",{staticClass:"line-number"},[t._v("78")]),s("br"),s("span",{staticClass:"line-number"},[t._v("79")]),s("br"),s("span",{staticClass:"line-number"},[t._v("80")]),s("br"),s("span",{staticClass:"line-number"},[t._v("81")]),s("br"),s("span",{staticClass:"line-number"},[t._v("82")]),s("br"),s("span",{staticClass:"line-number"},[t._v("83")]),s("br"),s("span",{staticClass:"line-number"},[t._v("84")]),s("br"),s("span",{staticClass:"line-number"},[t._v("85")]),s("br"),s("span",{staticClass:"line-number"},[t._v("86")]),s("br"),s("span",{staticClass:"line-number"},[t._v("87")]),s("br"),s("span",{staticClass:"line-number"},[t._v("88")]),s("br"),s("span",{staticClass:"line-number"},[t._v("89")]),s("br"),s("span",{staticClass:"line-number"},[t._v("90")]),s("br"),s("span",{staticClass:"line-number"},[t._v("91")]),s("br"),s("span",{staticClass:"line-number"},[t._v("92")]),s("br"),s("span",{staticClass:"line-number"},[t._v("93")]),s("br"),s("span",{staticClass:"line-number"},[t._v("94")]),s("br"),s("span",{staticClass:"line-number"},[t._v("95")]),s("br"),s("span",{staticClass:"line-number"},[t._v("96")]),s("br"),s("span",{staticClass:"line-number"},[t._v("97")]),s("br"),s("span",{staticClass:"line-number"},[t._v("98")]),s("br"),s("span",{staticClass:"line-number"},[t._v("99")]),s("br"),s("span",{staticClass:"line-number"},[t._v("100")]),s("br"),s("span",{staticClass:"line-number"},[t._v("101")]),s("br"),s("span",{staticClass:"line-number"},[t._v("102")]),s("br"),s("span",{staticClass:"line-number"},[t._v("103")]),s("br"),s("span",{staticClass:"line-number"},[t._v("104")]),s("br"),s("span",{staticClass:"line-number"},[t._v("105")]),s("br"),s("span",{staticClass:"line-number"},[t._v("106")]),s("br"),s("span",{staticClass:"line-number"},[t._v("107")]),s("br"),s("span",{staticClass:"line-number"},[t._v("108")]),s("br"),s("span",{staticClass:"line-number"},[t._v("109")]),s("br"),s("span",{staticClass:"line-number"},[t._v("110")]),s("br"),s("span",{staticClass:"line-number"},[t._v("111")]),s("br"),s("span",{staticClass:"line-number"},[t._v("112")]),s("br"),s("span",{staticClass:"line-number"},[t._v("113")]),s("br"),s("span",{staticClass:"line-number"},[t._v("114")]),s("br"),s("span",{staticClass:"line-number"},[t._v("115")]),s("br"),s("span",{staticClass:"line-number"},[t._v("116")]),s("br"),s("span",{staticClass:"line-number"},[t._v("117")]),s("br"),s("span",{staticClass:"line-number"},[t._v("118")]),s("br"),s("span",{staticClass:"line-number"},[t._v("119")]),s("br"),s("span",{staticClass:"line-number"},[t._v("120")]),s("br"),s("span",{staticClass:"line-number"},[t._v("121")]),s("br"),s("span",{staticClass:"line-number"},[t._v("122")]),s("br"),s("span",{staticClass:"line-number"},[t._v("123")]),s("br"),s("span",{staticClass:"line-number"},[t._v("124")]),s("br"),s("span",{staticClass:"line-number"},[t._v("125")]),s("br"),s("span",{staticClass:"line-number"},[t._v("126")]),s("br"),s("span",{staticClass:"line-number"},[t._v("127")]),s("br"),s("span",{staticClass:"line-number"},[t._v("128")]),s("br"),s("span",{staticClass:"line-number"},[t._v("129")]),s("br"),s("span",{staticClass:"line-number"},[t._v("130")]),s("br"),s("span",{staticClass:"line-number"},[t._v("131")]),s("br"),s("span",{staticClass:"line-number"},[t._v("132")]),s("br"),s("span",{staticClass:"line-number"},[t._v("133")]),s("br"),s("span",{staticClass:"line-number"},[t._v("134")]),s("br"),s("span",{staticClass:"line-number"},[t._v("135")]),s("br"),s("span",{staticClass:"line-number"},[t._v("136")]),s("br"),s("span",{staticClass:"line-number"},[t._v("137")]),s("br"),s("span",{staticClass:"line-number"},[t._v("138")]),s("br"),s("span",{staticClass:"line-number"},[t._v("139")]),s("br"),s("span",{staticClass:"line-number"},[t._v("140")]),s("br"),s("span",{staticClass:"line-number"},[t._v("141")]),s("br"),s("span",{staticClass:"line-number"},[t._v("142")]),s("br"),s("span",{staticClass:"line-number"},[t._v("143")]),s("br"),s("span",{staticClass:"line-number"},[t._v("144")]),s("br")])]),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("p",[t._v("在php-fpm的配置文件中，有两个指令非常重要，就是pm."),s("code",[t._v("max_children和")]),t._v(" "),s("code",[t._v("request_terminate_timeout")]),t._v('\n第一个指令"pm.'),s("code",[t._v("max_children")]),t._v('" 确定了php-fpm的处理能力，原则上是越多越好，但这个是在内存足够大的前提下，每开启一个php-fpm进程要占用近30M左右的内存\n如果请求访问较多，那么可能会出现502，504错误。'),s("strong",[s("code",[t._v("对于502错误来说，属于繁忙进程而造成的")])]),t._v("，"),s("code",[t._v("对于504来说，就是客户发送的请求在限定的时间内没有得到相应")]),t._v("，过多的请求导致“504 Gateway Time-out”。这里也有可能是服务器带宽问题。")]),t._v(" "),s("p",[t._v('另外一个需要注意的指令"'),s("code",[t._v("request_terminate_timeout")]),t._v('"，它决定php-fpm进程的连接/发送和读取的时间，如果设置过小很容易出现"502 Bad Gateway" 和 “504 Gateway Time-out”，默认为0，就是说没有启用，不加限制，但是这种设置前提是你的php-fpm足够健康，这个需要根据实际情况加以限定')]),t._v(" "),s("h2",{attrs:{id:"一些配置项说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一些配置项说明"}},[t._v("#")]),t._v(" 一些配置项说明")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.php.net/manual/zh/install.fpm.configuration.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),s("OutboundLink")],1)]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("配置项")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("pid = /usr/local/var/run/php-fpm.pid")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("pid设置，一定要开启,上面是Mac平台的。默认在php安装目录中的"),s("code",[t._v("var/run/php-fpm.pid")]),t._v("。比如centos的在: "),s("code",[t._v("/usr/local/php/var/run/php-fpm.pid")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("error_log = /usr/local/var/log/php-fpm.log")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),s("tr",[s("td",[s("code",[t._v("log_level = notice")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("错误级别. 上面的php-fpm.log纪录的登记。可用级别为: alert（必须立即处理）, error（错误情况）, warning（警告情况）, notice（一般重要信息）, debug（调试信息）. 默认: notice")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("emergency_restart_threshold = 60")]),t._v("; "),s("code",[t._v("emergency_restart_interval = 60s")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("表示在"),s("code",[t._v("emergency_restart_interval")]),t._v("所设值内出现SIGSEGV或者SIGBUS错误的php-cgi进程数如果超过 "),s("code",[t._v("emergency_restart_threshold")]),t._v("个，php-fpm就会优雅重启。这两个选项一般保持默认值。0 表示 '关闭该功能'. 默认值: 0 (关闭).")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("process_control_timeout = 0")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("设置子进程接受主进程复用信号的超时时间. 可用单位: s(秒), m(分), h(小时), 或者 d(天) 默认单位: s(秒). 默认值: 0.")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("daemonize = yes")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("后台执行fpm,默认值为yes，如果为了调试可以改为no。在FPM中，可以使用不同的设置来运行多个进程池。 这些设置可以针对每个进程池单独设置。")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("listen = 127.0.0.1:9000")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("fpm监听端口，即nginx中php处理的地址，一般默认值即可。可用格式为: 'ip:port', 'port', '/path/to/unix/socket'. 每个进程池都需要设置。如果nginx和php在不同的机器上，分布式处理，就设置ip这里就可以了。")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("listen.backlog = -1")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("backlog数，设置 listen 的半连接队列长度，-1表示无限制，由操作系统决定，此行注释掉就行。backlog含义参考：http://www.3gyou.cc/?p=41")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("listen.allowed_clients = 127.0.0.1")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("允许访问FastCGI进程的IP白名单，设置any为不限制IP，如果要设置其他主机的nginx也能访问这台FPM进程，listen处要设置成本地可被访问的IP。默认值是any。每个地址是用逗号分隔. 如果没有设置或者为空，则允许任何服务器请求连接。")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("listen.owner = www")]),t._v(";"),s("code",[t._v("listen.group = www")]),t._v(";"),s("code",[t._v("listen.mode = 0666")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("unix socket设置选项，如果使用tcp方式访问，这里注释即可。")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("user = www")]),t._v(";"),s("code",[t._v("group = www")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("启动进程的用户和用户组，FPM 进程运行的Unix用户, 必须要设置。用户组，如果没有设置，则默认用户的组被使用。")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("pm = dynamic")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("php-fpm进程启动模式，pm可以设置为static和dynamic和ondemand 如果选择static，则进程数就数固定的，由pm.max_children指定固定的子进程数。 如果选择dynamic，则进程数是动态变化的,由以下参数决定：")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("pm.max_children = 50")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("子进程最大数")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("pm.start_servers = 2")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("启动时的进程数，默认值为: min_spare_servers + (max_spare_servers - min_spare_servers) / 2")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("pm.min_spare_servers = 1")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("保证空闲进程数最小值，如果空闲进程小于此值，则创建新的子进程")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("pm.max_spare_servers = 3")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("，保证空闲进程数最大值，如果空闲进程大于此值，此进行清理")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("pm.max_requests = 500")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("设置每个子进程重生之前服务的请求数. 对于可能存在内存泄漏的第三方模块来说是非常有用的. 如果设置为 '0' 则一直接受请求. 等同于 PHP_FCGI_MAX_REQUESTS 环境变量. 默认值: 0.")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("pm.status_path = /status")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("FPM状态页面的网址. 如果没有设置, 则无法访问状态页面. 默认值: none. munin监控会使用到")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("ping.path = /ping")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("FPM监控页面的ping网址. 如果没有设置, 则无法访问ping页面. 该页面用于外部检测FPM是否存活并且可以响应请求. 请注意必须以斜线开头 (/)。")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("ping.response = pong")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("用于定义ping请求的返回相应. 返回为 HTTP 200 的 text/plain 格式文本. 默认值: pong.")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("access.log = log/$pool.access.log")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("每一个请求的访问日志，默认是关闭的。")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v('access.format = "%R - %u %t \\"%m %r%Q%q\\" %s %f %{mili}d %{kilo}M %C%%"')])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("设定访问日志的格式。")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("slowlog = log/$pool.log.slow")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("慢请求的记录日志,配合request_slowlog_timeout使用，默认关闭")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("request_slowlog_timeout = 10s")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("当一个请求该设置的超时时间后，就会将对应的PHP调用堆栈信息完整写入到慢日志中. 设置为 '0' 表示 'Off'")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("request_terminate_timeout = 0")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("设置单个请求的超时中止时间. 该选项可能会对php.ini设置中的'max_execution_time'因为某些特殊原因没有中止运行的脚本有用. 设置为 '0' 表示 'Off'.当经常出现502错误时可以尝试更改此选项。")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("rlimit_files = 1024")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("设置文件打开描述符的rlimit限制. 默认值: 系统定义值默认可打开句柄是1024，可使用 ulimit -n查看，ulimit -n 2048修改。")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("rlimit_core = 0")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("设置核心rlimit最大限制值. 可用值: 'unlimited' 、0或者正整数. 默认值: 系统定义值.")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("chroot =")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("启动时的Chroot目录. 所定义的目录需要是绝对路径. 如果没有设置, 则chroot不被使用.")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("chdir =")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("设置启动目录，启动时会自动Chdir到该目录. 所定义的目录需要是绝对路径. 默认值: 当前目录，或者/目录（chroot时）")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("catch_workers_output = yes")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("重定向运行过程中的stdout和stderr到主要的错误日志文件中. 如果没有设置, stdout 和 stderr 将会根据FastCGI的规则被重定向到 /dev/null . 默认值: 空.")])])])])])}),[],!1,null,null,null);e.default=a.exports}}]);