(window.webpackJsonp=window.webpackJsonp||[]).push([[193],{606:function(t,_,v){"use strict";v.r(_);var e=v(33),a=Object(e.a)({},(function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("p",[v("strong",[t._v("发布订阅模式，就是一个生产者发送的消息会被多个消费者获取，因为一条消息会被多个消费者分别消费处理，所以也叫广播模式、一对多模式。")])]),t._v(" "),v("blockquote",[v("p",[t._v("说明：因为RabbitMQ实现发布订阅模式使用的exchange类型是"),v("strong",[t._v("fanout")]),t._v("，所以也叫fanout模式。")])]),t._v(" "),v("h2",{attrs:{id:"架构图"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#架构图"}},[t._v("#")]),t._v(" 架构图")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://raw.githubusercontent.com/renzhifan/upic_img/master/uPic/2022/05/16/11-02-42-kyUtL6-3748Qh.jpg",alt:"11-02-42-kyUtL6-3748Qh"}})]),t._v(" "),v("p",[t._v("说明：")]),t._v(" "),v("ul",[v("li",[v("code",[t._v("P")]),t._v(" 代表生产者 , "),v("code",[t._v("C1")]),t._v("、"),v("code",[t._v("C2")]),t._v(" 代表消费者，红色代表队列, "),v("strong",[t._v("X代表交换机")]),t._v("("),v("code",[t._v("Exchange")]),t._v(")。")]),t._v(" "),v("li",[t._v("交换机("),v("strong",[t._v("Exchange")]),t._v(")负责将消息转发至绑定交换机的所有队列。")]),t._v(" "),v("li",[t._v("可以定义多个队列，分别绑定"),v("strong",[t._v("同一个")]),t._v("交换机。")]),t._v(" "),v("li",[t._v("每个队列可以有一个或者多个消费者。")])]),t._v(" "),v("blockquote",[v("p",[t._v("提示："),v("strong",[t._v("同一个队列，一条消息只能被一个消费者处理")]),t._v("，fanout模式之所以能够实现消息广播，"),v("strong",[t._v("本质上是通过多个消息队列实现")]),t._v("。")])]),t._v(" "),v("h2",{attrs:{id:"应用场景"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#应用场景"}},[t._v("#")]),t._v(" 应用场景")]),t._v(" "),v("p",[t._v("发布订阅模式，是一种比较常用一对多消费模式，例如：电商下单之后产生下单消息、仓库模块订阅下单消息处理发货、通知模块订阅下单消息处理发短信、积分模块订阅下单消息处理积分等等，按需订阅消息，实现业务扩展，是一种低耦合的设计模式。")])])}),[],!1,null,null,null);_.default=a.exports}}]);