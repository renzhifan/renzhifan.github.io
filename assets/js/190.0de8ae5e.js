(window.webpackJsonp=window.webpackJsonp||[]).push([[190],{602:function(t,a,r){"use strict";r.r(a);var e=r(33),s=Object(e.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"rabbitmq概念示意图"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#rabbitmq概念示意图"}},[t._v("#")]),t._v(" RabbitMQ概念示意图")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://raw.githubusercontent.com/renzhifan/upic_img/master/uPic/2022/05/16/10-56-13-j6hXw4-Pi8WkI.jpg",alt:"10-56-13-j6hXw4-Pi8WkI"}})]),t._v(" "),r("h2",{attrs:{id:"概念解释"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#概念解释"}},[t._v("#")]),t._v(" 概念解释")]),t._v(" "),r("h3",{attrs:{id:"message"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#message"}},[t._v("#")]),t._v(" Message")]),t._v(" "),r("blockquote",[r("p",[t._v("消息，包含消息头（即附属的配置信息）和消息体（即消息内容）")])]),t._v(" "),r("h3",{attrs:{id:"publisher"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#publisher"}},[t._v("#")]),t._v(" Publisher")]),t._v(" "),r("blockquote",[r("p",[t._v("消息的生产者，是一个向交换器发布消息的客户端应用程序")])]),t._v(" "),r("h3",{attrs:{id:"exchange"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#exchange"}},[t._v("#")]),t._v(" Exchange")]),t._v(" "),r("blockquote",[r("p",[t._v("交换器，用来接收生产者发送的消息并且将这些消息路由给服务器中的队列")])]),t._v(" "),r("p",[r("strong",[t._v("四种Exchange类型")]),t._v(":")]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("Direct类型")]),t._v("：将消息中的"),r("strong",[t._v("Routing key")]),t._v("与该"),r("strong",[t._v("Exchange")]),t._v("关联的所有"),r("strong",[t._v("Binding")]),t._v("中的"),r("strong",[t._v("Routing key")]),t._v("进行比较，如果相等，则发送到该"),r("strong",[t._v("Binding")]),t._v("对应的"),r("strong",[t._v("Queue")]),t._v("中")]),t._v(" "),r("li",[r("strong",[t._v("Topic")]),t._v(" 类型：将消息中的"),r("strong",[t._v("Routing key")]),t._v("与该Exchange关联的所有Binding中的"),r("strong",[t._v("Routing key")]),t._v("进行对比，如果匹配上了，则发送到该"),r("strong",[t._v("Binding")]),t._v("对应的"),r("strong",[t._v("Queue")]),t._v("中。")]),t._v(" "),r("li",[r("strong",[t._v("Fanout")]),t._v(" 类型：直接将消息转发到所有binding的对应queue中，这种exchange在路由转发的时候，忽略Routing key。")]),t._v(" "),r("li",[r("strong",[t._v("Headers")]),t._v(" 类型：将消息中的headers与该Exchange相关联的所有Binging中的参数进行匹配，如果匹配上了，则发送到该Binding对应的Queue中（不常用，作用于Direct类型类似）。")])]),t._v(" "),r("h3",{attrs:{id:"binding"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#binding"}},[t._v("#")]),t._v(" Binding")]),t._v(" "),r("blockquote",[r("p",[t._v("绑定关系，用于建立消息队列和交换器之间的关系")])]),t._v(" "),r("h3",{attrs:{id:"queue"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#queue"}},[t._v("#")]),t._v(" Queue")]),t._v(" "),r("blockquote",[r("p",[t._v("消息队列，用来保存消息直到发送给消费者，他是消息的容器，也是消息的终点。一个消息可投入一个或者多个队列。消息一直在队列里面，等待消费者连接到这个队列将其取走")])]),t._v(" "),r("h3",{attrs:{id:"connection"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#connection"}},[t._v("#")]),t._v(" Connection")]),t._v(" "),r("p",[r("strong",[t._v("网络连接比如tcp连接")])]),t._v(" "),r("h3",{attrs:{id:"channel"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#channel"}},[t._v("#")]),t._v(" Channel")]),t._v(" "),r("blockquote",[r("p",[t._v("信道，信道是建立在真实的TCP连接内地虚拟连接，AMQP命令都是通过信道发出去的，不管是发布消息，订阅队列，还是接受消息，这些动作都是在信道完成的。")])]),t._v(" "),r("blockquote",[r("p",[t._v("因为对于操作系统来说建立和销毁TCP都是非常安昂贵的开销，所以引入信道的概念，以此来复用一条TCP连接")])]),t._v(" "),r("h3",{attrs:{id:"consumer"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#consumer"}},[t._v("#")]),t._v(" Consumer")]),t._v(" "),r("p",[t._v("消息的消费者，表示一个从消息队列中取得消息的客户端应用程序")]),t._v(" "),r("h3",{attrs:{id:"virtual-host"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#virtual-host"}},[t._v("#")]),t._v(" Virtual Host")]),t._v(" "),r("p",[t._v("可以通过MySQL和MySQL中的数据库来理解RabbitMQ和virtual host的关系。\nMySQL大家都不陌生，经常会出现多个业务线混用一个MySQL数据库的情况，就像下图这样，每个业务线都在MySQL中创建自己的数据库，使用时各自往各自的数据库中存储数据，彼此相互不干涉。")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://raw.githubusercontent.com/renzhifan/upic_img/master/uPic/2022/05/16/10-56-51-iGQXpC-pFJ84z.jpg",alt:"10-56-51-iGQXpC-pFJ84z"}})]),t._v(" "),r("p",[t._v("RabbitMQ和virtual host的关系也差不多，可以让多个业务线同时使用一个RabbitMQ，只要为业务线各个业务线绑定上不同的virtual host即可：")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://raw.githubusercontent.com/renzhifan/upic_img/master/uPic/2022/05/16/10-58-18-1BIIMm-T3HA6x.jpg",alt:"10-58-18-1BIIMm-T3HA6x"}})]),t._v(" "),r("p",[t._v("虚拟主机，表示一批交换机，消息队列和相关的对象。虚拟主机是共享相同的身份认证和加密环境的独立服务器域。")]),t._v(" "),r("p",[t._v("每个vhost本质上就是一个mini版的RabbitMQ服务器，拥有自己的队列、交换器、绑定和权限机制。")]),t._v(" "),r("p",[t._v("vhost是AMQP概念的基础，必须在连接的时候指定，RabbitMQ默认的vhost是/")]),t._v(" "),r("blockquote",[r("p",[t._v("提示：Virtual Host就是一种资源隔离策略，可以在同一个RabbitMQ中划分多个隔离的区域。")])]),t._v(" "),r("p",[t._v("创建virtual host 并指定用户可以使用它")]),t._v(" "),r("ul",[r("li",[t._v("Step1\n"),r("img",{attrs:{src:"https://raw.githubusercontent.com/renzhifan/upic_img/master/uPic/2022/05/16/10-58-38-PrrbUR-URErPh.jpg",alt:"10-58-38-PrrbUR-URErPh"}})]),t._v(" "),r("li",[t._v("Step2\n"),r("img",{attrs:{src:"https://raw.githubusercontent.com/renzhifan/upic_img/master/uPic/2022/05/16/10-58-57-L0Tzpd-vRY4wP.jpg",alt:"10-58-57-L0Tzpd-vRY4wP"}})]),t._v(" "),r("li",[t._v("Step3\n"),r("img",{attrs:{src:"https://raw.githubusercontent.com/renzhifan/upic_img/master/uPic/2022/05/16/10-59-12-WXpOCa-wUVLMh.jpg",alt:"10-59-12-WXpOCa-wUVLMh"}})]),t._v(" "),r("li",[t._v("Step4: 校验\n"),r("img",{attrs:{src:"https://raw.githubusercontent.com/renzhifan/upic_img/master/uPic/2022/05/16/10-59-26-6uPJ3Z-kaHwZX.jpg",alt:"10-59-26-6uPJ3Z-kaHwZX"}})])]),t._v(" "),r("h3",{attrs:{id:"broker"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#broker"}},[t._v("#")]),t._v(" Broker")]),t._v(" "),r("blockquote",[r("p",[t._v("表示消息队列服务器实体")])])])}),[],!1,null,null,null);a.default=s.exports}}]);