(window.webpackJsonp=window.webpackJsonp||[]).push([[119],{533:function(t,a,s){"use strict";s.r(a);var e=s(33),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"整型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#整型"}},[t._v("#")]),t._v(" 整型")]),t._v(" "),s("blockquote",[s("p",[t._v("整型是所有编程语言里最基础的数据类型，Go 语言默认支持如下这些整型类型：")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("类型")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("长度（单位：字节）")]),t._v(" "),s("th",{staticStyle:{"text-align":"right"}},[t._v("说明")]),t._v(" "),s("th",{staticStyle:{"text-align":"right"}},[t._v("值范围")]),t._v(" "),s("th",{staticStyle:{"text-align":"right"}},[t._v("默认值")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("int8")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("带符号8位整型")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("-128~127")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("0")])]),t._v(" "),s("tr",[s("td",[t._v("uint8")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("无符号8位整型，与 byte 类型等价")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("0~255")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("0")])]),t._v(" "),s("tr",[s("td",[t._v("int16")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("2")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("带符号16位整型")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("-32768~32767")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("0")])]),t._v(" "),s("tr",[s("td",[t._v("uint16")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("2")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("无符号16位整型")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("0~65535")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("0")])]),t._v(" "),s("tr",[s("td",[t._v("int32")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("4")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("带符号32位整型，与 rune 类型等价")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("-2147483648~2147483647")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("0")])]),t._v(" "),s("tr",[s("td",[t._v("uint32")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("4")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("无符号32位整型")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("0~4294967295")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("0")])]),t._v(" "),s("tr",[s("td",[t._v("int64")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("8")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("带符号64位整型")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("-9223372036854775808~9223372036854775807")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("0")])]),t._v(" "),s("tr",[s("td",[t._v("uint64")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("8")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("无符号64位整型")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("0~18446744073709551615")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("0")])]),t._v(" "),s("tr",[s("td",[t._v("int")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("32位或64位")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("与具体平台相关")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("与具体平台相关")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("0")])]),t._v(" "),s("tr",[s("td",[t._v("uint")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("32位或64位")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("与具体平台相关")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("与具体平台相关")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("0")])]),t._v(" "),s("tr",[s("td",[t._v("uintptr")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("与对应指针相同")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("无符号整型，足以存储指针值的未解释位")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("32位平台下为4字节，64位平台下为8字节")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("0")])])])]),t._v(" "),s("p",[t._v("Go 支持的整型类型非常丰富，你可以根据需要设置合适的整型类型，以节省内存空间，此外 int 和 int32 在 Go 语言里被认为是两种不同的类型（同理，int 和 int64 也是不同的类型），编译器也不会帮你自动做类型转换，比如以下的例子会有编译错误：")]),t._v(" "),s("div",{staticClass:"language-go line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" intValue1 "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int8")]),t._v("\nintValue2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// intValue2 将会被自动推导为 int 类型 ")]),t._v("\nintValue1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" intValue2  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 编译错误")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("编译错误类似于：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(" cannot use intValue2 (type int) as type int8 in assignment\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("使用强制类型转换可以解决这个编译错误：")]),t._v(" "),s("div",{staticClass:"language-go line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("intValue1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("int8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("intValue2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 编译通过")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("blockquote",[s("p",[t._v("注：关于类型转换我们在后面介绍完所有数据类型后会单独介绍。")])]),t._v(" "),s("p",[t._v("我们还可以通过 "),s("code",[t._v("intValue := uint8(intValue2)")]),t._v(" 这种方式同时完成类型转化和赋值操作。")]),t._v(" "),s("p",[t._v("此外，和其他编程语言一样，可以通过增加前缀 0 来表示八进制数（如：077），增加前缀 0x 来表示十六进制数（如：0xFF），以及使用 E 来表示 10 的连乘（如：1E3 = 1000）。")]),t._v(" "),s("h2",{attrs:{id:"运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运算符"}},[t._v("#")]),t._v(" 运算符")]),t._v(" "),s("h3",{attrs:{id:"算术运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#算术运算符"}},[t._v("#")]),t._v(" 算术运算符")]),t._v(" "),s("p",[t._v("Go 语言支持所有常规的整数四则运算："),s("code",[t._v("+、-、*、/ 和 %")]),t._v("（取余运算只能用于整数），不过由于强类型的关系，在 Go 语言中，不同类型的整型值不能直接进行算术运算，比如下面这样计算就会报编译错误：")]),t._v(" "),s("div",{staticClass:"language-go line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("intValue3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" intValue1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" intValue2\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("编译错误信息如下：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("invalid operation: intValue1 + intValue2 (mismatched types int8 and int)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("类型转化之后就好了：")]),t._v(" "),s("div",{staticClass:"language-go line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("intValue3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" intValue1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("int8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("intValue2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("如果你是从动态语言转过来学习 Go，在刚开始写代码时尤其要注意这些因为类型问题产生的 bug。")]),t._v(" "),s("p",[t._v("在 Go 语言中，也支持自增/自减运算符，即 "),s("code",[t._v("++/--")]),t._v("，但是只能作为语句，不能作为表达式，且只能用作后缀，不能放到变量前面：")]),t._v(" "),s("div",{staticClass:"language-go line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("intValue1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 有效，intValue1 的值变成 9")]),t._v("\nintValue1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" intValue1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 无效，编译报错")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("intValue1  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 无效，编译报错")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("还支持"),s("code",[t._v("+=、-=、*=、/=、%=")]),t._v(" 这种快捷写法：")]),t._v(" "),s("div",{staticClass:"language-go line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("intValue1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" intValue1 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 18")]),t._v("\nintValue1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-=")]),t._v(" intValue1 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\nintValue1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*=")]),t._v(" intValue1 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 81")]),t._v("\nintValue1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/=")]),t._v(" intValue1 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\nintValue1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%=")]),t._v(" intValue1 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("h3",{attrs:{id:"比较运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#比较运算符"}},[t._v("#")]),t._v(" 比较运算符")]),t._v(" "),s("p",[t._v("Go 语言支持以下几种常见的比较运算符："),s("code",[t._v(">、<、==、>=、<= 和 !=")]),t._v("，比较运算符运行的结果是布尔值。")]),t._v(" "),s("p",[t._v("Go 是强类型语言，不同类型的值不能放在一起比较，否则会报编译错处：")]),t._v(" "),s("div",{staticClass:"language-go line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" intValue1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" intValue2 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    fmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"intValue1 和 intValue2 相等"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("相同类型的值才可以：")]),t._v(" "),s("div",{staticClass:"language-go line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" intValue1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" intValue3 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    fmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"intValue1 比 intValue3 小"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("由此可见，所有比较运算符在比较的时候都会考虑进数据类型的因素，所以不需要额外引入类似 PHP 等动态语言中的 "),s("code",[t._v("===")]),t._v(" 和 "),s("code",[t._v("!==")]),t._v(" 这种严格比较运算符。")]),t._v(" "),s("p",[t._v("不过，各种类型的整型变量都可以直接与字面常量进行比较，比如：")]),t._v(" "),s("div",{staticClass:"language-go line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" intValue1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    fmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"intValue1 = 8"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h3",{attrs:{id:"位运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#位运算符"}},[t._v("#")]),t._v(" 位运算符")]),t._v(" "),s("p",[t._v("位运算符以二进制的方式对数值进行运算，效率更高，性能更好，Go 语言支持以下这几种位运算符：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("运算符")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("含义")]),t._v(" "),s("th",[t._v("结果")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("x & y")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("按位与")]),t._v(" "),s("td",[t._v("把 x 和 y 都为 1 的位设为 1")])]),t._v(" "),s("tr",[s("td",[t._v("x")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("y")]),t._v(" "),s("td",[t._v("按位或")])]),t._v(" "),s("tr",[s("td",[t._v("x ^ y")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("按位异或")]),t._v(" "),s("td",[t._v("把 x 和 y 一个为 1 一个为 0 的位设为 1")])]),t._v(" "),s("tr",[s("td",[t._v("^x")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("按位取反")]),t._v(" "),s("td",[t._v("把 x 中为 0 的位设为 1，为 1 的位设为 0")])]),t._v(" "),s("tr",[s("td",[t._v("x << y")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("左移")]),t._v(" "),s("td",[t._v("把 x 中的位向左移动 y 次，每次移动相当于乘以 2")])]),t._v(" "),s("tr",[s("td",[t._v("x >> y")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("右移")]),t._v(" "),s("td",[t._v("把 x 中的位向右移动 y 次，每次移动相当于除以 2")])])])]),t._v(" "),s("p",[t._v("我们可以做一些简单的测试：")]),t._v(" "),s("div",{staticClass:"language-go line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" intValueBit "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint8")]),t._v("\nintValueBit "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),t._v("\nintValueBit "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v("intValueBit "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 按位取反")]),t._v("\nfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("intValueBit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\nintValueBit "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nintValueBit "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" intValueBit "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 左移 3 位，相当于乘以 2^3 = 8")]),t._v("\nfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("intValueBit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 8")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("h3",{attrs:{id:"逻辑运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#逻辑运算符"}},[t._v("#")]),t._v(" 逻辑运算符")]),t._v(" "),s("p",[t._v("Go 语言支持以下逻辑运算符：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("运算符")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("含义")]),t._v(" "),s("th",[t._v("结果")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("x && y")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("逻辑与运算符（AND）")]),t._v(" "),s("td",[t._v("如果 x 和 y 都是 true，则结果为 true，否则结果为 false")])]),t._v(" "),s("tr",[s("td",[t._v("x")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",[t._v("y")])]),t._v(" "),s("tr",[s("td",[t._v("!x")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("逻辑非运算符（NOT）")]),t._v(" "),s("td",[t._v("如果 x 为 true，则结果为 false，否则结果为 true")])])])]),t._v(" "),s("blockquote",[s("p",[t._v("逻辑运算符计算的结果也是布尔值，通常我们可以组合使用逻辑运算符和比较运算符：")])]),t._v(" "),s("div",{staticClass:"language-go line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" intValue1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" intValue3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" intValue1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    fmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"条件为真"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h3",{attrs:{id:"运算符优先级"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运算符优先级"}},[t._v("#")]),t._v(" 运算符优先级")]),t._v(" "),s("blockquote",[s("p",[t._v("上面介绍的 Go 语言运算符优先级如下所示（由上到下表示优先级从高到低，或者数字越大，优先级越高）：")])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("6      ^（按位取反） !\n5      *  /  %  <<  >>  &  &^\n4      +  -  |  ^（按位异或）\n3      ==  !=  <  <=  >  >=\n2      &&\n1      ||\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[s("code",[t._v("++")]),t._v(" 或 "),s("code",[t._v("--")]),t._v(" 只能出现在语句中，不能用于表达式，故不参与优先级判断。")])])}),[],!1,null,null,null);a.default=n.exports}}]);