(window.webpackJsonp=window.webpackJsonp||[]).push([[186],{600:function(s,t,n){"use strict";n.r(t);var a=n(33),e=Object(a.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"_1-精确匹配单个字段"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-精确匹配单个字段"}},[s._v("#")]),s._v(" 1.精确匹配单个字段")]),s._v(" "),n("blockquote",[n("p",[s._v("elasticsearch的term查询，下面给出完整的代码")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('package main\n\nimport (\n\t"context"\n\t"fmt"\n\t"github.com/olivere/elastic/v7"\n\t"log"\n\t"os"\n\t"reflect"\n\t"time"\n)\n\ntype Article struct {\n\tTitle   string    // 文章标题\n\tContent string    // 文章内容\n\tAuthor  string    // 作者\n\tCreated time.Time // 发布时间\n}\n\n\nfunc main() {\n        // 创建Client, 连接ES\n\tclient, err := elastic.NewClient(\n\t\t// elasticsearch 服务地址，多个服务地址使用逗号分隔\n\t\telastic.SetURL("http://127.0.0.1:9200", "http://127.0.0.1:9201"),\n\t\t// 基于http base auth验证机制的账号和密码\n\t\telastic.SetBasicAuth("user", "secret"),\n\t\t// 启用gzip压缩\n\t\telastic.SetGzip(true),\n\t\t// 设置监控检查时间间隔\n\t\telastic.SetHealthcheckInterval(10*time.Second),\n\t\t// 设置请求失败最大重试次数\n\t\telastic.SetMaxRetries(5),\n\t\t// 设置错误日志输出\n\t\telastic.SetErrorLog(log.New(os.Stderr, "ELASTIC ", log.LstdFlags)),\n\t\t// 设置info日志输出\n\t\telastic.SetInfoLog(log.New(os.Stdout, "", log.LstdFlags)))\n\n\tif err != nil {\n\t\t// Handle error\n\t\tfmt.Printf("连接失败: %v\\n", err)\n\t} else {\n\t\tfmt.Println("连接成功")\n\t}\n\n\t// 执行ES请求需要提供一个上下文对象\n\tctx := context.Background()\n\n\t// 创建term查询条件，用于精确查询\n\ttermQuery := elastic.NewTermQuery("Author", "tizi")\n\t\n\tsearchResult, err := client.Search().\n\t\tIndex("blogs").   // 设置索引名\n\t\tQuery(termQuery).   // 设置查询条件\n\t\tSort("Created", true). // 设置排序字段，根据Created字段升序排序，第二个参数false表示逆序\n\t\tFrom(0). // 设置分页参数 - 起始偏移量，从第0行记录开始\n\t\tSize(10).   // 设置分页参数 - 每页大小\n\t\tPretty(true).       // 查询结果返回可读性较好的JSON格式\n\t\tDo(ctx)             // 执行请求\n\n\tif err != nil {\n\t\t// Handle error\n\t\tpanic(err)\n\t}\n\n\tfmt.Printf("查询消耗时间 %d ms, 结果总数: %d\\n", searchResult.TookInMillis, searchResult.TotalHits())\n\n\n\tif searchResult.TotalHits() > 0 {\n\t\t// 查询结果不为空，则遍历结果\n\t\tvar b1 Article\n\t\t// 通过Each方法，将es结果的json结构转换成struct对象\n\t\tfor _, item := range searchResult.Each(reflect.TypeOf(b1)) {\n\t\t\t// 转换成Article对象\n\t\t\tif t, ok := item.(Article); ok {\n\t\t\t\tfmt.Println(t.Title)\n\t\t\t}\n\t\t}\n\t}\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br"),n("span",{staticClass:"line-number"},[s._v("70")]),n("br"),n("span",{staticClass:"line-number"},[s._v("71")]),n("br"),n("span",{staticClass:"line-number"},[s._v("72")]),n("br"),n("span",{staticClass:"line-number"},[s._v("73")]),n("br"),n("span",{staticClass:"line-number"},[s._v("74")]),n("br"),n("span",{staticClass:"line-number"},[s._v("75")]),n("br"),n("span",{staticClass:"line-number"},[s._v("76")]),n("br"),n("span",{staticClass:"line-number"},[s._v("77")]),n("br"),n("span",{staticClass:"line-number"},[s._v("78")]),n("br"),n("span",{staticClass:"line-number"},[s._v("79")]),n("br"),n("span",{staticClass:"line-number"},[s._v("80")]),n("br")])]),n("h2",{attrs:{id:"_2-通过terms实现sql的in查询"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-通过terms实现sql的in查询"}},[s._v("#")]),s._v(" 2.通过terms实现SQL的in查询")]),s._v(" "),n("blockquote",[n("p",[s._v("通过terms查询语法实现，多值查询效果")])]),s._v(" "),n("p",[s._v("例子：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('// 创建terms查询条件\ntermsQuery := elastic.NewTermsQuery("Author", "dasdas", "exchange")\n\nsearchResult, err := client.Search().\n\t\tIndex("blogs").   // 设置索引名\n\t\tQuery(termsQuery).   // 设置查询条件\n\t\tSort("Created", true). // 设置排序字段，根据Created字段升序排序，第二个参数false表示逆序\n\t\tFrom(0). // 设置分页参数 - 起始偏移量，从第0行记录开始\n\t\tSize(10).   // 设置分页参数 - 每页大小\n\t\tDo(ctx)             // 执行请求\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("h2",{attrs:{id:"_3-匹配单个字段"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-匹配单个字段"}},[s._v("#")]),s._v(" 3.匹配单个字段")]),s._v(" "),n("blockquote",[n("p",[s._v("某个字段使用全文搜索，"),n("strong",[s._v("也就是ES的match语法")])])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('// 创建match查询条件\nmatchQuery := elastic.NewMatchQuery("Title", "golang es教程")\n\nsearchResult, err := client.Search().\nIndex("blogs").   // 设置索引名\nQuery(matchQuery).   // 设置查询条件\nSort("Created", true). // 设置排序字段，根据Created字段升序排序，第二个参数false表示逆序\nFrom(0). // 设置分页参数 - 起始偏移量，从第0行记录开始\nSize(10).   // 设置分页参数 - 每页大小\nDo(ctx)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("h2",{attrs:{id:"_4-范围查询"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-范围查询"}},[s._v("#")]),s._v(" 4.范围查询")]),s._v(" "),n("p",[s._v("实现类似"),n("strong",[s._v("Created > '2020-07-20'")]),s._v(" and **Created < '2020-07-22'**的范围查询条件")]),s._v(" "),n("p",[s._v("创建查询表达式例子：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('// 例1 等价表达式： Created > "2020-07-20" and Created < "2020-07-29"\nrangeQuery := elastic.NewRangeQuery("Created").\n\t\tGt("2020-07-20").\n\t\tLt("2020-07-29")\n\n// 例2 等价表达式： id >= 1 and id < 10\nrangeQuery := elastic.NewRangeQuery("id").\n\t\tGte(1).\n\t\tLte(10)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("h2",{attrs:{id:"_5-bool组合查询"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-bool组合查询"}},[s._v("#")]),s._v(" 5.bool组合查询")]),s._v(" "),n("h3",{attrs:{id:"_5-1-must条件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-must条件"}},[s._v("#")]),s._v(" 5.1. must条件")]),s._v(" "),n("blockquote",[n("p",[s._v("类似SQL的and，代表必须匹配的条件。")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('// 创建bool查询\nboolQuery := elastic.NewBoolQuery().Must()\n\n// 创建term查询\ntermQuery := elastic.NewTermQuery("Author", "tizi")\nmatchQuery := elastic.NewMatchQuery("Title", "golang es教程")\n\n// 设置bool查询的must条件, 组合了两个子查询\n// 表示搜索匹配Author=tizi且Title匹配"golang es教程"的文档\nboolQuery.Must(termQuery, matchQuery)\n\nsearchResult, err := client.Search().\nIndex("blogs").   // 设置索引名\nQuery(boolQuery).   // 设置查询条件\nSort("Created", true). // 设置排序字段，根据Created字段升序排序，第二个参数false表示逆序\nFrom(0). // 设置分页参数 - 起始偏移量，从第0行记录开始\nSize(10).   // 设置分页参数 - 每页大小\nDo(ctx)             // 执行请求\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br")])]),n("h3",{attrs:{id:"_5-2-must-not条件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-must-not条件"}},[s._v("#")]),s._v(" 5.2. must_not条件")]),s._v(" "),n("blockquote",[n("p",[s._v("跟must的作用相反，用法和must类似")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('// 创建bool查询\nboolQuery := elastic.NewBoolQuery().Must()\n\n// 创建term查询\ntermQuery := elastic.NewTermQuery("Author", "tizi")\n\n// 设置bool查询的must not条件\nboolQuery.MustNot(termQuery)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("h3",{attrs:{id:"_5-2-should条件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-should条件"}},[s._v("#")]),s._v(" 5.2. should条件")]),s._v(" "),n("blockquote",[n("p",[s._v("类似SQL中的 or， 只要匹配其中一个条件即可")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('// 创建bool查询\nboolQuery := elastic.NewBoolQuery().Must()\n\n// 创建term查询\ntermQuery := elastic.NewTermQuery("Author", "tizi")\nmatchQuery := elastic.NewMatchQuery("Title", "golang es教程")\n\n// 设置bool查询的should条件, 组合了两个子查询\n// 表示搜索Author=tizi或者Title匹配"golang es教程"的文档\nboolQuery.Should(termQuery, matchQuery)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);