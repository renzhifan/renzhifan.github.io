(window.webpackJsonp=window.webpackJsonp||[]).push([[204],{618:function(s,a,r){"use strict";r.r(a);var e=r(33),t=Object(e.a)({},(function(){var s=this,a=s.$createElement,r=s._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[r("h2",{attrs:{id:"说明"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#说明"}},[s._v("#")]),s._v(" 说明")]),s._v(" "),r("p",[s._v("PHP RabbitMQ Work模式，就是配置多个消费者消费同一个队列的消息，可以提高消息的并发处理速度，架构如下图")]),s._v(" "),r("p",[r("img",{attrs:{src:"https://raw.githubusercontent.com/renzhifan/upic_img/master/uPic/2022/05/16/11-01-42-8vCwgT-S6jvDd.jpg",alt:"11-01-42-8vCwgT-S6jvDd"}})]),s._v(" "),r("blockquote",[r("p",[s._v("提示：无论使用RabbitMQ那种工作模式，每个队列都支持多个消费者，同一个队列，一条消息只会被其中一个消费者处理。")])]),s._v(" "),r("h2",{attrs:{id:"php实现多个消费者"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#php实现多个消费者"}},[s._v("#")]),s._v(" PHP实现多个消费者")]),s._v(" "),r("blockquote",[r("p",[s._v("PHP因为自己本身不支持多线程、协程之类的并发技术，通常使用多进程方式实现并发处理，这里使用多进程模式实现多个消费者并发消费队列内的消息。")])]),s._v(" "),r("h3",{attrs:{id:"手动启动多个进程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#手动启动多个进程"}},[s._v("#")]),s._v(" 手动启动多个进程")]),s._v(" "),r("p",[s._v("要实现多进程，最简单的办法就是手动运行多次PHP命令即可。")]),s._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v("# 下面启动两个消费者\n# shell窗口1\nphp Recv.php\n\n# shell窗口2\nphp Recv.php\n")])]),s._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[s._v("1")]),r("br"),r("span",{staticClass:"line-number"},[s._v("2")]),r("br"),r("span",{staticClass:"line-number"},[s._v("3")]),r("br"),r("span",{staticClass:"line-number"},[s._v("4")]),r("br"),r("span",{staticClass:"line-number"},[s._v("5")]),r("br"),r("span",{staticClass:"line-number"},[s._v("6")]),r("br")])]),r("p",[s._v("也可以这样:")]),s._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v("# shell窗口1\nphp Recv.php &\nphp Recv.php &\n")])]),s._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[s._v("1")]),r("br"),r("span",{staticClass:"line-number"},[s._v("2")]),r("br"),r("span",{staticClass:"line-number"},[s._v("3")]),r("br")])]),r("p",[s._v("在同一个shell窗口内，将脚本放到后台运行")]),s._v(" "),r("blockquote",[r("p",[s._v("说明：这种手动启动多个php脚本的方式实现多个消费者，缺点就是进程不好维护，没有进程监控，如果进程挂了，不会自动重启。")])]),s._v(" "),r("h3",{attrs:{id:"supervisor实现多进程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#supervisor实现多进程"}},[s._v("#")]),s._v(" Supervisor实现多进程")]),s._v(" "),r("p",[s._v("Supervisor 是 Linux 操作系统下中的一个进程监控器，通过Supervisor可以监控php进程，如果php进程挂了会自动重启，也可以配置进程的并发数，这样可以轻松实现多个消费者并发处理消息。")]),s._v(" "),r("p",[s._v("下面以Ubuntu为例，其他Linux类似")]),s._v(" "),r("p",[s._v("安装supervisor")]),s._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v("sudo apt-get install supervisor\n")])]),s._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[s._v("1")]),r("br")])]),r("p",[s._v("配置 Supervisor\nSupervisor 的配置文件通常位于 /etc/supervisor/conf.d 目录下。在该目录中，你可以创建任意数量的配置文件，用来告诉supervisor 怎么监控我们的进程。例如，创建一个rabbitmq-worker.conf 文件, 用来监控我们的消费者进程。")]),s._v(" "),r("p",[s._v("例子:\n文件: rabbitmq-worker.conf")]),s._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v("[program:rabbitmq-worker]\nprocess_name=%(program_name)s_%(process_num)02d\ncommand=php recv.php\nautostart=true\nautorestart=true\nuser=root\nnumprocs=10\nredirect_stderr=true\nstdout_logfile=/var/log/worker.log\n")])]),s._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[s._v("1")]),r("br"),r("span",{staticClass:"line-number"},[s._v("2")]),r("br"),r("span",{staticClass:"line-number"},[s._v("3")]),r("br"),r("span",{staticClass:"line-number"},[s._v("4")]),r("br"),r("span",{staticClass:"line-number"},[s._v("5")]),r("br"),r("span",{staticClass:"line-number"},[s._v("6")]),r("br"),r("span",{staticClass:"line-number"},[s._v("7")]),r("br"),r("span",{staticClass:"line-number"},[s._v("8")]),r("br"),r("span",{staticClass:"line-number"},[s._v("9")]),r("br")])]),r("p",[s._v("参数说明：")]),s._v(" "),r("ul",[r("li",[s._v("process_name - 进程名字定义，可以随便命名, 这里用了两个变量program_name(进程名)和process_num（进程编号）")]),s._v(" "),r("li",[s._v("command - 我们需要运行的命令")]),s._v(" "),r("li",[s._v("autostart - 是否开机启动")]),s._v(" "),r("li",[s._v("autorestart - 是否自动重启")]),s._v(" "),r("li",[s._v("user - 使用哪个系统账号运行命令")]),s._v(" "),r("li",[s._v("numprocs - 进程并发数，打算启动几个进程")]),s._v(" "),r("li",[s._v("stdout_logfile - 运行日志文件保存在哪里")])]),s._v(" "),r("h2",{attrs:{id:"效果图"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#效果图"}},[s._v("#")]),s._v(" 效果图")]),s._v(" "),r("p",[r("img",{attrs:{src:"https://raw.githubusercontent.com/renzhifan/upic_img/master/uPic/2022/05/16/11-45-30-5Cqf87-8LvKN6K.gif",alt:"11-45-30-5Cqf87-8LvKN6K"}})])])}),[],!1,null,null,null);a.default=t.exports}}]);