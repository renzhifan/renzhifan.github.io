(window.webpackJsonp=window.webpackJsonp||[]).push([[121],{535:function(s,t,a){"use strict";a.r(t);var n=a(33),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串"}},[s._v("#")]),s._v(" 字符串")]),s._v(" "),a("h3",{attrs:{id:"基本使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本使用"}},[s._v("#")]),s._v(" 基本使用")]),s._v(" "),a("blockquote",[a("p",[s._v("在 Go 语言中，字符串是一种基本类型，默认是通过"),a("code",[s._v("UTF-8")]),s._v("编码的字符序列，当字符为 ASCII 码时则占用 1 个字节，其它字符根据需要占用 "),a("code",[s._v("2-4")]),s._v("个字节，比如中文编码通常需要 "),a("code",[s._v("3")]),s._v(" 个字节。")])]),s._v(" "),a("h3",{attrs:{id:"声明和初始化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#声明和初始化"}},[s._v("#")]),s._v(" 声明和初始化")]),s._v(" "),a("p",[s._v("字符串的声明和初始化非常简单，举例如下：")]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" str "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 声明字符串变量")]),s._v("\nstr "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello World"')]),s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 变量初始化")]),s._v("\nstr2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"你好"')]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 也可以同时进行声明和初始化")]),s._v("\nch "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 取字符串的第一个字符 ")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h3",{attrs:{id:"格式化输出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#格式化输出"}},[s._v("#")]),s._v(" 格式化输出")]),s._v(" "),a("p",[s._v("还可以通过 Go 语言内置的 "),a("code",[s._v("len()")]),s._v(" 函数获取指定字符串的长度，以及通过 "),a("a",{attrs:{href:"https://golang.google.cn/pkg/fmt/",target:"_blank",rel:"noopener noreferrer"}},[s._v("fmt"),a("OutboundLink")],1),s._v(" 包提供的 Printf 进行字符串格式化输出：")]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[s._v("fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"The length of \\"%s\\" is %d \\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \nfmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"The first character of \\"%s\\" is %c.\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"转义字符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#转义字符"}},[s._v("#")]),s._v(" 转义字符")]),s._v(" "),a("p",[s._v("Go 语言的字符串不支持单引号，只能通过双引号定义字符串字面值，如果要对特定字符进行转义，可以通过 \\ 实现，就像我们上面在字符串中转义双引号和换行符那样，常见的需要转义的字符如下所示：")]),s._v(" "),a("ul",[a("li",[s._v("\\n ：换行符")]),s._v(" "),a("li",[s._v("\\r ：回车符")]),s._v(" "),a("li",[s._v("\\t ：tab 键")]),s._v(" "),a("li",[s._v("\\u 或 \\U ：Unicode 字符")]),s._v(" "),a("li",[s._v("\\ ：反斜杠自身")])]),s._v(" "),a("p",[s._v("所以，上述打印代码输出结果为：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('The length of "Hello world" is 11 \nThe first character of "Hello world" is H.\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v('除此之外，你可以通过如下方式在字符串中包含 "：')]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[s._v("label "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('`Search results for "Golang":`')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"多行字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多行字符串"}},[s._v("#")]),s._v(" 多行字符串")]),s._v(" "),a("p",[s._v("对于多行字符串，也可以通过 ` 构建：")]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[s._v("results "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('`Search results for "Golang":\n- Go\n- Golang\nGolang Programming\n`')]),s._v("\nfmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%s"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" results"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("打印结果如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('Search results for "Golang":\n- Go\n- Golang\n- Golang Programming\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("当然，使用 + 连接符也是可以的：")]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[s._v("results "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Search results for \\"Golang\\":\\n"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"- Go\\n"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"- Golang\\n"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"- Golang Programming\\n"')]),s._v("\nfmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%s"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" results"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("打印结果是一样的，但是要多输入不少字符，也不如上一种实现优雅。")]),s._v(" "),a("h3",{attrs:{id:"不可变值类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不可变值类型"}},[s._v("#")]),s._v(" 不可变值类型")]),s._v(" "),a("p",[s._v("虽然可以通过数组下标方式访问字符串中的字符：")]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[s._v("ch "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 取字符串的第一个字符 ")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("但是和数组不同，在 Go 语言中，字符串是一种不可变值类型，一旦初始化之后，它的内容不能被修改，比如看下面这个例子：")]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[s._v("str "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello world"')]),s._v("\nstr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'X'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 编译错误")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("编译器会报类似如下的错误：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("cannot assign to str[0]\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"字符编码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符编码"}},[s._v("#")]),s._v(" 字符编码")]),s._v(" "),a("p",[s._v("Go 语言中字符串默认是"),a("code",[s._v("UTF-8")]),s._v("编码的 "),a("code",[s._v("Unicode")]),s._v(" 字符序列，所以可以包含非 "),a("code",[s._v("ANSI")]),s._v(" 字符，比如「Hello, 你好」可以出现在 Go 代码中")]),s._v(" "),a("p",[s._v("但需要注意的是，如果你的 Go 代码需要包含非 ANSI 字符，保存源文件时请注意编码格式必须选择 UTF-8。特别是在 Windows 下一般编辑器都默认保存为本地编码，比如中国地区可能是 GBK 编码而不是 UTF-8，如果没注意到这点在编译和运行时就会出现一些意料之外的情况。")]),s._v(" "),a("p",[s._v("字符串的编码转换是处理文本文档（比如 TXT、XML、HTML 等）时非常常见的需求，不过 Go 语言默认仅支持 "),a("code",[s._v("UTF-8")]),s._v("和 "),a("code",[s._v("Unicode")]),s._v(" 编码，对于其他编码，Go 语言标准库并没有内置的编码转换支持。所幸的是我们可以很容易基于 "),a("code",[s._v("iconv")]),s._v(" 库包装一个，这里有一个开源项目可供参考："),a("a",{attrs:{href:"https://github.com/qiniu/iconv",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://github.com/qiniu/iconv"),a("OutboundLink")],1),s._v("。")]),s._v(" "),a("h2",{attrs:{id:"字符串操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串操作"}},[s._v("#")]),s._v(" 字符串操作")]),s._v(" "),a("h3",{attrs:{id:"字符串连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串连接"}},[s._v("#")]),s._v(" 字符串连接")]),s._v(" "),a("p",[s._v("Go 内置提供了丰富的字符串函数，常见的操作包含连接、获取长度和指定字符，获取长度和指定字符前面已经介绍过，字符串连接只需要通过 "),a("code",[s._v("+")]),s._v(" 连接符即可：")]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[s._v("str "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('", 你好"')]),s._v("\nstr "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('", 你好"')]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 上述语句也可以简写为这样，效果完全一样")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("另外，还有一点需要注意的是如果字符串长度较长，需要换行，则 + 连接符必须出现在上一行的末尾，否则会报错：")]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[s._v("str "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('", 你好"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"字符串切片"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串切片"}},[s._v("#")]),s._v(" 字符串切片")]),s._v(" "),a("p",[s._v("在 Go 语言中，可以通过字符串切片实现获取子串的功能：")]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[s._v("str "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello, world"')]),s._v("\nstr1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获取索引5（不含）之前的子串")]),s._v("\nstr2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获取索引7（含）之后的子串")]),s._v("\nstr3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获取从索引0（含）到索引5（不含）之间的子串")]),s._v("\nfmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"str1:"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" str1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nfmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"str2:"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" str2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nfmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"str3:"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" str3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("Go 切片区间可以对比数学中的区间概念来理解，它是一个"),a("strong",[s._v("左闭右开")]),s._v("的区间，比如上述 str[0:5] 对应到字符串元素的区间是 [0,5)，str[:5] 对应的区间是 [0,5)（数组索引从 0 开始），str[7:] 对应的区间是 [7:len(str)]（这是闭区间，是个例外，因为没有指定区间结尾）。")]),s._v(" "),a("p",[s._v("所以，上述代码打印结果如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("str1: hello\nstr2: world\nstr3: hello\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("综上所述，字符串切片通过 : 连接的起始点和结束点索引对字符串进行切片，冒号之前的数字代表起始点，为空表示从 0 开始，之后的数字代表结束点，为空表示到字符串最后，而不是子串的长度。所以 str[:] 会打印出完整的字符串来。")]),s._v(" "),a("p",[s._v("此外 Go 字符串也支持字符串比较、是否包含指定字符/子串、获取指定子串索引位置、字符串替换、大小写转换、trim 等操作，更多操作 API，请参考标准库 "),a("a",{attrs:{href:""}},[s._v("strings")]),s._v(" 包，这里就不一一展示了。")]),s._v(" "),a("h2",{attrs:{id:"字符串遍历"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串遍历"}},[s._v("#")]),s._v(" 字符串遍历")]),s._v(" "),a("blockquote",[a("p",[s._v("Go 语言支持两种方式遍历字符串。")])]),s._v(" "),a("p",[s._v("一种是以"),a("strong",[s._v("字节数组")]),s._v("的方式遍历：")]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[s._v("str "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello, 世界"')]),s._v(" \nn "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    ch "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 依据下标取字符串中的字符，ch 类型为 byte")]),s._v("\n    fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("这个例子的输出结果为：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("0 72 \n1 101 \n2 108 \n3 108 \n4 111 \n5 44 \n6 32 \n7 228 \n8 184 \n9 150 \n10 231 \n11 149 \n12 140\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p",[s._v("可以看出，这个字符串长度为 13，尽管从直观上来说，这个字符串应该只有 9 个字符。这是因为每个中文字符在 UTF-8 中占 3 个字节，而不是 1 个字节")]),s._v(" "),a("p",[s._v("另一种是以 "),a("strong",[s._v("Unicode 字符")]),s._v("遍历：")]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[s._v("str "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello, 世界"')]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ch "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("range")]),s._v(" str "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n    fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ch 的类型为 rune ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("输出结果为：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("0 72 \n1 101 \n2 108 \n3 108 \n4 111 \n5 44 \n6 32 \n7 19990 \n10 30028\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("这个时候，打印的就是 9 个字符了，因为以 Unicode 字符方式遍历时，每个字符的类型是 "),a("code",[s._v("rune")]),s._v("，而不是 "),a("code",[s._v("byte")]),s._v("。")]),s._v(" "),a("p",[s._v("看到这里可能你有点懵，会好奇 Go 底层到底是如何存储字符串的，为什么不同遍历方式获取的结果不同呢？")]),s._v(" "),a("h2",{attrs:{id:"底层字符类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#底层字符类型"}},[s._v("#")]),s._v(" 底层字符类型")]),s._v(" "),a("p",[s._v("Go 语言对字符串中的单个字符进行了单独的类型支持，在 Go 语言中支持两种字符类型：")]),s._v(" "),a("ul",[a("li",[s._v("一种是 byte，代表 UTF-8 编码中单个字节的值（它也是 uint8 类型的别名，两者是等价的，因为正好占据 1 个字节的内存空间）；")]),s._v(" "),a("li",[s._v("另一种是 rune，代表单个 Unicode 字符（它也是 int32 类型的别名，因为正好占据 4 个字节的内存空间。关于 rune 相关的操作，可查阅 Go 标准库的 "),a("a",{attrs:{href:"https://golang.org/pkg/unicode/",target:"_blank",rel:"noopener noreferrer"}},[s._v("unicode"),a("OutboundLink")],1),s._v(" 包）。")])]),s._v(" "),a("h3",{attrs:{id:"utf-8-和-unicode-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#utf-8-和-unicode-的区别"}},[s._v("#")]),s._v(" UTF-8 和 Unicode 的区别")]),s._v(" "),a("p",[s._v("说到这里，我们需要区分 UTF-8 和 Unicode 的区别。")]),s._v(" "),a("p",[s._v("Unicode 是一种字符集，囊括了目前世界上所有语言的所有字符，与之类似的术语还有 ASCII 字符集（仅包含 256 个字符）、ISO 8859-1 字符集等（包含所有西方拉丁字母），广义的 Unicode 既包含了字符集，也包含了编码规则，比如 UTF-8、UTF-16、UTF8MB4、GBK 等。")]),s._v(" "),a("p",[s._v("因此 UTF-8 是 Unicode 字符集的实现方式之一，它会将 Unicode 字符以某种方式进行编码。在具体实现时，UTF-8 是一种变长的编码规则，从 1~4 个字节不等，比如英文字符是 1 个字节，中文字符是 3 个字节。通过 UTF-8 编码的 Unicode 字符以最大长度 4 个字节作为单个字符固定占据的内存空间，在 Go 语言中可以通过 "),a("a",{attrs:{href:"https://pkg.go.dev/unicode/utf8",target:"_blank",rel:"noopener noreferrer"}},[s._v("unicode/utf8"),a("OutboundLink")],1),s._v(" 包进行 UTF-8 和 Unicode 之间的转换。")]),s._v(" "),a("p",[s._v("所以如果从 Unicode 字符集的视角看，字符串的每个字符都是一个字符的独立单元，但如果从 UTF-8 编码的视角看，一个字符可能是由多个字节编码而来的。")]),s._v(" "),a("p",[s._v("我们通过 "),a("code",[s._v("len")]),s._v(" 函数获取到的是字符串的字节长度，再据此通过字符数组的方式遍历字符串时，是以 "),a("code",[s._v("UTF-8")]),s._v(" 编码的角度切入的；而当我们通过 "),a("code",[s._v("range")]),s._v(" 关键字遍历字符串时，又是从 "),a("code",[s._v("Unicode")]),s._v(" 字符集的角度切入的，如此一来就得到了不同的结果。")]),s._v(" "),a("p",[s._v("出于简化语言的考虑，Go 语言的多数 API 都假设字符串为 UTF-8 编码。")]),s._v(" "),a("h3",{attrs:{id:"将-unicode-编码转化为可打印字符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#将-unicode-编码转化为可打印字符"}},[s._v("#")]),s._v(" 将 Unicode 编码转化为可打印字符")]),s._v(" "),a("p",[s._v("如果你想要将 "),a("code",[s._v("Unicode")]),s._v(" 字符编码转化为对应的字符，可以使用 "),a("code",[s._v("string")]),s._v(" 函数进行转化：：")]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[s._v("str "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello, 世界"')]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ch "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("range")]),s._v(" str "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n    fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("对应的打印结果如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("0 H\n1 e\n2 l\n3 l\n4 o\n5 ,\n6  \n7 世\n10 界\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("UTF-8 编码不能这样转化，英文字符没问题，因为一个英文字符就是一个字节，中文字符则会乱码，因为一个中文字符编码需要三个字节，转化单个字节会出现乱码。")])])}),[],!1,null,null,null);t.default=e.exports}}]);